set (CMAKE_CXX_STANDARD 11)

# Download and unpack googletest at configure time
configure_file(CMakeLists.txt.in googletest-download/CMakeLists.txt)
execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
  RESULT_VARIABLE result
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/googletest-download )
if(result)
  message(FATAL_ERROR "CMake step for googletest failed: ${result}")
endif()
execute_process(COMMAND ${CMAKE_COMMAND} --build .
  RESULT_VARIABLE result
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/googletest-download )
if(result)
  message(FATAL_ERROR "Build step for googletest failed: ${result}")
endif()

# Prevent overriding the parent project's compiler/linker
# settings on Windows
set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)

# Add googletest directly to our build. This defines
# the gtest and gtest_main targets.
add_subdirectory(${CMAKE_CURRENT_BINARY_DIR}/googletest-src
                 ${CMAKE_CURRENT_BINARY_DIR}/googletest-build
                 EXCLUDE_FROM_ALL)

# The gtest/gtest_main targets carry header search path
# dependencies automatically when using CMake 2.8.11 or
# later. Otherwise we have to add them here ourselves.
if (CMAKE_VERSION VERSION_LESS 2.8.11)
  include_directories("${gtest_SOURCE_DIR}/include")
endif()


project(vec_str_project)
include(CTest)
# include(include(GNUInstallDirs)

set(PROJECT_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/include)
set(EXECUTABLE_INSTALL_DIR ${CMAKE_SOURCE_DIR}/bin)
set(LIB_INSTALL_DIR ${CMAKE_SOURCE_DIR}/lib)
set(HEADER_INSTALL_DIR ${PROJECT_INCLUDE_DIR}/${PROJECT_NAME})

include_directories(${PROJECT_INCLUDE_DIR})


add_subdirectory(src)
add_subdirectory(tests)
add_subdirectory(app)
add_subdirectory(docs)
